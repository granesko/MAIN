with last_version as (
    select
        app_version,
        min(date_) as start_date
    from (
        select
            to_date(`timestamp`) as date_,
            regexp_extract(`api_version`, '\\d+\\.\\d+', 0) as app_version,
            count(distinct user_id) as users
        from sn_ios.login
        where mypartition(year_, month_) >= mypartition(unix_timestamp(now()), -120)
        group by 1,2
    ) as a
    where users > 5000
    group by 1
    order by 2 desc
    limit 3
)

select
    platform,
    app_version,
    country_group,
    (case
        when user_level between 1 and 12 then '1-11'
        when user_level between 1 and 12 then '12-20'
        when user_level between 21 and 50 then '21-50'
        when user_level between 51 and 75 then '51-75'
        when user_level between 76 and 100 then '76-100'
        when user_level between 101 and 150 then '101-150'
        when user_level between 151 and 200 then '151-200'
        when user_level > 200 then '200+'
    end) as user_level,
    (case
        when total_spent28 < 25 then 'Plankton. $0-$25'
        when total_spent28 >= 25 and total_spent28 < 150 then 'Fish. $25-$150'
        when total_spent28 >= 150 and total_spent28 < 350 then 'Dolphin. $150-$350'
        when total_spent28 >= 350 then 'Whale. $350+'
        else 'Non-payer'
    end) as ocean,
    scene_id,
    scene_name,
    anomaly_id,
    mode,
    used_hints,
    level,
    win,
    cast((unix_timestamp(date_) - unix_timestamp(start_date))/86400 as int) as days_after_update,
    count(distinct user_id) as users,
    sum(games) as games
from (
    select a.platform,
           a.app_version,
           a.date_,
           a.user_id,
           a.scene_id,
           a.scene_name,
           a.anomaly_id,
           a.mode,
           a.used_hints,
           a.level,
           a.win,
           a.user_level,
           a.games,
           country_group,
           total_spent28,
           start_date
    from
    (select
        a.platform,
        a.app_version,
        a.date_,
        a.user_id,
        a.scene_id,
        a.scene_name,
        a.anomaly_id,
        a.mode,
        a.used_hints,
        a.level,
        a.win,
        a.user_level,
        a.games,
        users.country_group,
        sum(revenue) as total_spent28
    from (
        select
            'iOS' as platform,
            regexp_extract(`api_version`, '\\d+\\.\\d+', 0) as app_version,
            trunc(`timestamp`, 'dd') as date_,
            user_id,
            scene_id,
            `name` as scene_name,
            if(anomaly_id < 0, 0, anomaly_id) as anomaly_id,
            mode,
            (
                if(monocle is null or monocle < 0, 0, monocle) +
                if(`time` is null or `time` < 0, 0, `time`) +
                if(arrow is null or arrow < 0, 0, arrow) +
                if(light is null or light < 0, 0, light) +
                if(lamp is null or lamp < 0, 0, lamp)
            ) > 0  as used_hints,
            level,
            win,
            min(user_level) as user_level,
            sum(1) as games
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        from sn_ios.scene_finish as ab1
        left join
        (select user_id as user_id_2, game_session_id as game_session_id_2, event_num as event_num_2 from extracts.642a5d5c1230733642e894f6 where if(to_date(now()) >= '2023-06-05', 1, 0) = 0) as ab2
        on ab1.user_id = ab2.user_id_2 and ab1.game_session_id = ab2.game_session_id_2 and ab1.event_num = ab2.event_num_2
        where ab2.user_id_2 is null
        and if(to_date(now()) >= '2023-06-05', '2000-01-01 00:00:01', `timestamp`) <= (select max_time_2 from extracts.642a6b0bfb01eb01ff6afb88)
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        and mypartition(year_, month_) >= mypartition(unix_timestamp(now()), -120)
        group by 2,3,4,5,6,7,8,9,10,11

        union all

        select
            'GP' as platform,
            regexp_extract(`api_version`, '\\d+\\.\\d+', 0) as app_version,
            trunc(`timestamp`, 'dd') as date_,
            user_id,
            scene_id,
            `name` as scene_name,
            if(anomaly_id < 0, 0, anomaly_id) as anomaly_id,
            mode,
            (
                if(monocle is null or monocle < 0, 0, monocle) +
                if(`time` is null or `time` < 0, 0, `time`) +
                if(arrow is null or arrow < 0, 0, arrow) +
                if(light is null or light < 0, 0, light) +
                if(lamp is null or lamp < 0, 0, lamp)
            ) > 0  as used_hints,
            level,
            win,
            min(user_level) as user_level,
            sum(1) as games
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        from sn_android.scene_finish as ab1
        left join
        (select user_id as user_id_2, game_session_id as game_session_id_2, event_num as event_num_2 from extracts.642a5d5c1230733642e894f6 where if(to_date(now()) >= '2023-06-05', 1, 0) = 0) as ab2
        on ab1.user_id = ab2.user_id_2 and ab1.game_session_id = ab2.game_session_id_2 and ab1.event_num = ab2.event_num_2
        where ab2.user_id_2 is null
        and if(to_date(now()) >= '2023-06-05', '2000-01-01 00:00:01', `timestamp`) <= (select max_time_2 from extracts.642a6b0bfb01eb01ff6afb88)
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        and mypartition(year_, month_) >= mypartition(unix_timestamp(now()), -120)
        group by 2,3,4,5,6,7,8,9,10,11

        union all

        select
            'Windows' as platform,
            regexp_extract(`api_version`, '\\d+\\.\\d+', 0) as app_version,
            trunc(`timestamp`, 'dd') as date_,
            user_id,
            scene_id,
            `name` as scene_name,
            if(anomaly_id < 0, 0, anomaly_id) as anomaly_id,
            mode,
            (
                if(monocle is null or monocle < 0, 0, monocle) +
                if(`time` is null or `time` < 0, 0, `time`) +
                if(arrow is null or arrow < 0, 0, arrow) +
                if(light is null or light < 0, 0, light) +
                if(lamp is null or lamp < 0, 0, lamp)
            ) > 0  as used_hints,
            level,
            win,
            min(user_level) as user_level,
            sum(1) as games
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        from sn_win8.scene_finish as ab1
        left join
        (select user_id as user_id_2, game_session_id as game_session_id_2, event_num as event_num_2 from extracts.642a5d5c1230733642e894f6 where if(to_date(now()) >= '2023-06-05', 1, 0) = 0) as ab2
        on ab1.user_id = ab2.user_id_2 and ab1.game_session_id = ab2.game_session_id_2 and ab1.event_num = ab2.event_num_2
        where ab2.user_id_2 is null
        and if(to_date(now()) >= '2023-06-05', '2000-01-01 00:00:01', `timestamp`) <= (select max_time_2 from extracts.642a6b0bfb01eb01ff6afb88)
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        and mypartition(year_, month_) >= mypartition(unix_timestamp(now()), -120)
        group by 2,3,4,5,6,7,8,9,10,11

        union all

        select
            'Amazon' as platform,
            regexp_extract(`api_version`, '\\d+\\.\\d+', 0) as app_version,
            trunc(`timestamp`, 'dd') as date_,
            user_id,
            scene_id,
            `name` as scene_name,
            if(anomaly_id < 0, 0, anomaly_id) as anomaly_id,
            mode,
            (
                if(monocle is null or monocle < 0, 0, monocle) +
                if(`time` is null or `time` < 0, 0, `time`) +
                if(arrow is null or arrow < 0, 0, arrow) +
                if(light is null or light < 0, 0, light) +
                if(lamp is null or lamp < 0, 0, lamp)
            ) > 0  as used_hints,
            level,
            win,
            min(user_level) as user_level,
            sum(1) as games
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        from sn_amazon.scene_finish as ab1
        left join
        (select user_id as user_id_2, game_session_id as game_session_id_2, event_num as event_num_2 from extracts.642a5d5c1230733642e894f6 where if(to_date(now()) >= '2023-06-05', 1, 0) = 0) as ab2
        on ab1.user_id = ab2.user_id_2 and ab1.game_session_id = ab2.game_session_id_2 and ab1.event_num = ab2.event_num_2
        where ab2.user_id_2 is null
        and if(to_date(now()) >= '2023-06-05', '2000-01-01 00:00:01', `timestamp`) <= (select max_time_2 from extracts.642a6b0bfb01eb01ff6afb88)
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        and mypartition(year_, month_) >= mypartition(unix_timestamp(now()), -120)
        group by 2,3,4,5,6,7,8,9,10,11

        union all

        select
            'Galaxy' as platform,
            regexp_extract(`api_version`, '\\d+\\.\\d+', 0) as app_version,
            trunc(`timestamp`, 'dd') as date_,
            user_id,
            scene_id,
            `name` as scene_name,
            if(anomaly_id < 0, 0, anomaly_id) as anomaly_id,
            mode,
            (
                if(monocle is null or monocle < 0, 0, monocle) +
                if(`time` is null or `time` < 0, 0, `time`) +
                if(arrow is null or arrow < 0, 0, arrow) +
                if(light is null or light < 0, 0, light) +
                if(lamp is null or lamp < 0, 0, lamp)
            ) > 0  as used_hints,
            level,
            win,
            min(user_level) as user_level,
            sum(1) as games
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        from sn_galaxy.scene_finish as ab1
        left join
        (select user_id as user_id_2, game_session_id as game_session_id_2, event_num as event_num_2 from extracts.642a5d5c1230733642e894f6 where if(to_date(now()) >= '2023-06-05', 1, 0) = 0) as ab2
        on ab1.user_id = ab2.user_id_2 and ab1.game_session_id = ab2.game_session_id_2 and ab1.event_num = ab2.event_num_2
        where ab2.user_id_2 is null
        and if(to_date(now()) >= '2023-06-05', '2000-01-01 00:00:01', `timestamp`) <= (select max_time_2 from extracts.642a6b0bfb01eb01ff6afb88)
        --ДАННАЯ ВСТАВКА НУЖНА ДЛЯ ЧИСТКИ ДУПЛИКАТОВ scene_finish в 2.35--
        and mypartition(year_, month_) >= mypartition(unix_timestamp(now()), -120)
        group by 2,3,4,5,6,7,8,9,10,11
    ) as a

    left join extracts.62a893d9d502da0951bc33e1 as users
    on a.user_id = users.user_id
    and a.platform = users.platform

    left join (
        select
            `timestamp` as event_time,
            user_id,
            'iOS' as platform,
            ifnull(usd_price, price) as revenue
        from sn_ios.iap
        where verified
        union all
        select
            `timestamp` as event_time,
            user_id,
            'GP' as platform,
            ifnull(usd_price, price) as revenue
        from sn_android.iap
        where verified
        union all
        select
            `timestamp` as event_time,
            user_id,
            'Amazon' as platform,
            ifnull(usd_price, price) as revenue
        from sn_amazon.iap
        where verified
        union all
        select
            `timestamp` as event_time,
            user_id,
            'Windows' as platform,
            ifnull(usd_price, price) as revenue
        from sn_win8.iap
        where verified
        union all
        select
            `timestamp` as event_time,
            user_id,
            'Galaxy' as platform,
            ifnull(usd_price, price) as revenue
        from sn_galaxy.iap
        where verified
    ) as iap
    on a.user_id = iap.user_id
    and a.platform = iap.platform
    and cast((unix_timestamp(a.date_) - unix_timestamp(iap.event_time))/86400 as int) between 0 and 28

    where exists (
        select 3
        from last_version as b
        where a.app_version = b.app_version
    )

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14
    ) a
    inner join
    last_version
    using (app_version)
    ) as a
where user_level < 12 and total_spent28 is null
group by 1,2,3,4,5,6,7,8,9,10,11,12,13
having a.app_version in ('2.34','2.36')
and platform = 'iOS';
